security:
    # Password hashing configuration
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # User providers configuration
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    # Firewalls configuration
    firewalls:
        
        login:
            pattern: ^/api/users/logins
            stateless: true
            json_login:
                check_path: /users/logins
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/
            stateless: true
            jwt: ~

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider

    # Access control configuration
    access_control:
        - { path: ^/api/users/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/users/logins, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }

# Testing configuration
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
